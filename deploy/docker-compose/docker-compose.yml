name: xenoblast

services:
  api_gateway:
    image: nginx:latest
    volumes:
      - ../../api-gateway/nginx.conf:/etc/nginx/nginx.conf
      - ../../api-gateway/conf.d/:/etc/nginx/conf.d/
      - ../../api-gateway/ssl/:/etc/nginx/ssl/
    ports:
      - 80:80
    depends_on:
      - http_service
      - websocket_service

  http_service:
    env_file: .env
    build:
      context: ../../backend
      dockerfile: ${SERVER_DOCKER_FILE}
    volumes:
      - ../../backend:/src
    command: ${SERVER_CMD_BASE} -service http
    expose:
      - 8080
    depends_on:
      - collector

  websocket_service:
    env_file: .env
    build:
      context: ../../backend
      dockerfile: ${SERVER_DOCKER_FILE}
    volumes:
      - ../../backend:/src
    command: ${SERVER_CMD_BASE} -service websocket
    expose:
      - 8080
    depends_on:
      - collector

  auth_service:
    env_file: .env
    build:
      context: ../../backend
      dockerfile: ${SERVER_DOCKER_FILE}
    volumes:
      - ../../backend:/src
    command: ${SERVER_CMD_BASE} -service auth
    expose:
      - 50051
    depends_on:
      - redis
      - collector

  matchmaking_service:
    env_file: .env
    build:
      context: ../../backend
      dockerfile: ${SERVER_DOCKER_FILE}
    volumes:
      - ../../backend:/src
    command: ${SERVER_CMD_BASE} -service matchmaking
    expose:
      - 50051
    depends_on:
      - redis
      - collector

  game_service:
    env_file: .env
    build:
      context: ../../backend
      dockerfile: ${SERVER_DOCKER_FILE}
    volumes:
      - ../../backend:/src
    command: ${SERVER_CMD_BASE} -service game
    expose:
      - 50051
    deploy:
      mode: replicated
      replicas: 2
      endpoint_mode: dnsrr
    depends_on:
      - collector

  redis:
    image: redis:latest
    expose:
      - 6379
    volumes:
      - redis_data:/data

  collector:
    container_name: collector
    image: otel/opentelemetry-collector-contrib:0.112.0
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ../../monitoring/collector/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    expose:
      - 8889 # Prometheus exporter metrics
      - 4317 # grpc receiver
      - 55679
    depends_on:
      - prometheus

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    volumes:
      - grafana_data:/var/lib/grafana #persistence
      - ../../monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ../../monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
    depends_on:
      - prometheus

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - prometheus_data:/prometheus #persistence
      - ../../monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    expose:
      - 9090

volumes:
  redis_data:
  prometheus_data:
  grafana_data:
